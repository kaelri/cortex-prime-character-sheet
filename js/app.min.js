window.cortexFunctions={arraysMatch:function(t,e){if(!Array.isArray(t)||!Array.isArray(e))return!1;if(t.length!==e.length)return!1;for(let i=0;i<t.length;i++)if(t[i]!==e[i])return!1;return!0},getDieDisplayValue:function(t){switch(t){case 4:return"4";case 6:return"6";case 8:return"8";case 10:return"0";case 12:return"2";default:return""}},renderDate:t=>new Date(t).toLocaleString()};const Roster={props:{characters:Array},computed:{charactersSorted(){return this.characters.sort(((t,e)=>e.modified-t.modified))}},template:'<section class="roster">\n\t\t<div class="roster-inner">\n\t\n\t\t\t\x3c!-- BUTTON: ADD/IMPORT CHARACTER --\x3e\n\t\t\t<div class="roster-button-container">\n\n\t\t\t\t<div class="roster-button"\n\t\t\t\t\t@click.stop="createCharacter"\n\t\t\t\t>\n\t\t\t\t\t<span><i class="fas fa-plus"></i> New Character</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div class="roster-button roster-button-import"\n\t\t\t\t\t@click.stop="importCharacterStart"\n\t\t\t\t>\n\t\t\t\t\t<span><i class="fas fa-upload"></i> Import Character</span>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\n\t\t\t\x3c!-- CHARACTER LIST --\x3e\n\t\t\t<ul class="roster-list">\n\n\t\t\t\t<transition-group appear>\n\t\t\t\t<li class="roster-item"\n\t\t\t\t\tv-for="character in charactersSorted" :key="character.id"\n\t\t\t\t>\n\n\t\t\t\t\t<div>\n\n\t\t\t\t\t\t<div :class="\'roster-item-portrait alignment-\' + character.portrait.alignment"\n\t\t\t\t\t\t\t:style="\'background-image: url(\' + character.portrait.url + \');\'"\n\t\t\t\t\t\t\t@click.stop="loadCharacter( character.id )"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class="roster-item-portrait-placeholder" v-if="!character.portrait.url.length"><i class="fas fa-user"></i></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\n\t\t\t\t\t\t<h3 class="roster-item-name" v-text="character.name"\n\t\t\t\t\t\t\t@click.stop="loadCharacter( character.id )"\n\t\t\t\t\t\t></h3>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div class="roster-description" v-text="character.description"></div>\n\n\t\t\t\t\t\t<div class="roster-date">\n\t\t\t\t\t\t\t<span class="roster-date-label">Last modified: </span>\n\t\t\t\t\t\t\t<span v-html="renderDate(character.modified)"></span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class="roster-item-button-container">\n\n\t\t\t\t\t\t\t\x3c!-- LOAD --\x3e\n\t\t\t\t\t\t\t<div class="roster-item-button"\n\t\t\t\t\t\t\t\t@click.stop="loadCharacter( character.id )"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span><i class="fas fa-plus"></i> Load</span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\x3c!-- EXPORT --\x3e\n\t\t\t\t\t\t\t<div class="roster-item-button roster-button-export"\n\t\t\t\t\t\t\t\t@click.stop="exportCharacter( character.id )"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span><i class="fas fa-download"></i> Export</span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\x3c!-- DELETE --\x3e\n\t\t\t\t\t\t\t<div class="roster-item-button roster-button-delete"\n\t\t\t\t\t\t\t\t@click.stop="deleteCharacter( character.id )"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span><i class="fas fa-trash"></i> Delete</span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</li>\n\t\t\t\t</transition-group>\n\n\t\t\t</ul>\n\n\t\t\t\x3c!-- BUTTON: ADD/IMPORT CHARACTER --\x3e\n\t\t\t\x3c!-- <div class="roster-button-container">\n\n\t\t\t\t<div class="roster-button"\n\t\t\t\t\t@click.stop="createCharacter"\n\t\t\t\t>\n\t\t\t\t\t<span><i class="fas fa-plus"></i> New Character</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div class="roster-button roster-button-import"\n\t\t\t\t\t@click.stop="importCharacterStart"\n\t\t\t\t>\n\t\t\t\t\t<span><i class="fas fa-upload"></i> Import Character</span>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div> --\x3e\n\n\t\t\t\x3c!-- FILE INPUT --\x3e\n\t\t\t<input class="roster-input" type="file" ref="inputFile" @change="importCharacter" multiple>\n\n\t\t</div>\n\t</section>',methods:{createCharacter(){this.$emit("createCharacter")},loadCharacter(t){this.$emit("loadCharacter",t)},exportCharacter(t){this.$emit("exportCharacter",t)},deleteCharacter(t){this.$emit("deleteCharacter",t)},importCharacterStart(){this.$refs.inputFile.click()},importCharacter(t){if(t.target.files&&t.target.files.length)for(let e=0;e<t.target.files.length;e++){const i=t.target.files[e];let a=new FileReader;a.readAsText(i),a.onload=()=>{let t=JSON.parse(a.result);this.$emit("importCharacter",t)},a.onerror=t=>{console.error("Import error: ",t)}}},renderDate:t=>window.cortexFunctions.renderDate(t)}},CharacterSheet={props:{submode:String,character:Object,editing:Array,viewY:Number},computed:{name(){return this.character?.name??""},description(){return this.character?.description??""},pronouns(){return this.character?.pronouns??""},portrait(){return this.character?.portrait??null},traitSets(){return this.character?.traitSets??[]},distinctions(){return this.traitSets.find((t=>"distinctions"===t.style))},attributes(){return this.traitSets.find((t=>"attributes"===t.location))?.traits||[]},attributesID(){return this.traitSets.findIndex((t=>"attributes"===t.location))}},template:'<section :class="\'character-sheet submode-\' + submode">\n\t\n\t\t\x3c!-- BUTTON: ADD ATTRIBUTE --\x3e\n\t\t<transition appear>\n\t\t<div class="preview-button-container"\n\t\t\tv-show="submode === \'print\'"\n\t\t>\n\t\t\t<div class="preview-button"\n\t\t\t\t@click.stop="print"\n\t\t\t>\n\t\t\t\t<span><i class="fas fa-print"></i> Print</span>\n\t\t\t</div>\n\t\t\t<div class="preview-button preview-button-export"\n\t\t\t\t@click.stop="exportCharacter"\n\t\t\t>\n\t\t\t\t<span><i class="fas fa-download"></i> Export</span>\n\t\t\t</div>\n\t\t</div>\n\t\t</transition>\n\n\t\t<div class="pages">\n\n\t\t\t\x3c!-- PAGE --\x3e\n\t\t\t<div class="page">\n\t\t\t\t<div class="page-inner">\n\n\t\t\t\t\t<header class="page-header">\n\n\t\t\t\t\t\t<div :class="{\'page-header-inner\': true, \'selected\': isSelected([\'name\'])}"\n\t\t\t\t\t\t\t@click.stop="selectElement([ \'name\' ])"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\x3c!-- CHARACTER NAME --\x3e\n\t\t\t\t\t\t\t\t<div class="title-container">\n\n\t\t\t\t\t\t\t\t\t<div class="title"\n\t\t\t\t\t\t\t\t\t\tv-html="name"\n\t\t\t\t\t\t\t\t\t></div>\n\n\t\t\t\t\t\t\t\t\t<div class="title-decoration">\n\t\t\t\t\t\t\t\t\t\t<svg height="4" width="100%"><line x1="0" y1="0" x2="10000" y2="0" style="stroke:#C50852;stroke-width:4pt"/></svg>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\x3c!-- CHARACTER DESCRIPTION --\x3e\n\t\t\t\t\t\t\t\t<div class="character-meta">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class="character-pronouns" v-if="pronouns.length">\n\t\t\t\t\t\t\t\t\t\t<span v-html="renderText(pronouns)"></span>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div class="character-description" v-if="description.length">\n\t\t\t\t\t\t\t\t\t\t<span v-html="renderText(description)"></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<transition name="editor" appear>\n\t\t\t\t\t\t\t<name-editor\n\t\t\t\t\t\t\t\t:character="character"\n\t\t\t\t\t\t\t\t:open="isSelected([\'name\'])"\n\t\t\t\t\t\t\t\tv-show="submode === \'edit\' && isSelected([\'name\'])"\n\t\t\t\t\t\t\t\t@selectElement="selectElement"\n\t\t\t\t\t\t\t\t@updateCharacter="updateCharacter"\n\t\t\t\t\t\t\t></name-editor>\n\t\t\t\t\t\t</transition>\n\n\t\t\t\t\t</header>\n\n\t\t\t\t\t\x3c!-- COLUMNS --\x3e\n\t\t\t\t\t<div class="columns">\n\n\t\t\t\t\t\t<div v-for="pageLocation in [\'left\', \'right\']" :class="\'column-\' + pageLocation">\n\n\t\t\t\t\t\t\t\x3c!-- PORTRAIT --\x3e\n\t\t\t\t\t\t\t<div class="portrait" v-if="pageLocation === \'right\'">\n\n\t\t\t\t\t\t\t\t<div :class="{ \'portrait-inner\': true, \'selected\': isSelected([\'portrait\']) }"\n\t\t\t\t\t\t\t\t\t@click.stop="selectElement([ \'portrait\' ])"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div :class="\'portrait-circle portrait-alignment-\' + portrait.alignment" width="100%" height="100%" :style="\'background-image: url(\' + portrait.url + \');\'">\n\t\t\t\t\t\t\t\t\t\t<div class="portrait-placeholder" v-if="!portrait.url.length"><i class="fas fa-user"></i></div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<transition name="editor" appear>\n\t\t\t\t\t\t\t\t\t<portrait-editor\n\t\t\t\t\t\t\t\t\t\t:character="character"\n\t\t\t\t\t\t\t\t\t\t:open="isSelected([\'portrait\'])"\n\t\t\t\t\t\t\t\t\t\tv-show="submode === \'edit\' && isSelected([\'portrait\'])"\n\t\t\t\t\t\t\t\t\t\t@selectElement="selectElement"\n\t\t\t\t\t\t\t\t\t\t@updateCharacter="updateCharacter"\n\t\t\t\t\t\t\t\t\t></portrait-editor>\n\t\t\t\t\t\t\t\t</transition>\n\t\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\x3c!-- ATTRIBUTES --\x3e\n\t\t\t\t\t\t\t<div :class="{ \'attributes\': true, \'vertical\': attributes.length > 5 }" v-if="pageLocation === \'right\'">\n\n\t\t\t\t\t\t\t\t<div class="attributes-grid">\n\n\t\t\t\t\t\t\t\t\t<div class="attribute-curve" xmlns="http://www.w3.org/2000/svg"\n\t\t\t\t\t\t\t\t\t\t:style="\'display: \' + ( attributes.length >= 2 ? \'block\' : \'none\' ) + \';\'"\n\t\t\t\t\t\t\t\t\t\tv-if="pageLocation === \'right\'"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<svg viewBox="0 0 62 62" width="62mm" height="30mm" preserveAspectRatio="xMidYMid slice">\n\t\t\t\t\t\t\t\t\t\t\t<path d="M -17 -25 A 32 32 0 0 0 79 0" stroke="#C50852" stroke-width="0.5mm" fill="transparent" vector-effect="non-scaling-stroke"/>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div class="attributes-items"\n\t\t\t\t\t\t\t\t\t\tv-if="pageLocation === \'right\'"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<div v-for="( attribute, a ) in attributes"\n\t\t\t\t\t\t\t\t\t\t\tclass="attribute"\n\t\t\t\t\t\t\t\t\t\t\t:style="getAttributeStyle( a )"\n\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t<div class="attribute-inner"\n\t\t\t\t\t\t\t\t\t\t\t\t:class="{ \'attribute-inner\': true, \'selected\': isSelected([\'trait\', attributesID, a]) }"\n\t\t\t\t\t\t\t\t\t\t\t\t@click.stop="selectElement([ \'trait\', attributesID, a ])"\n\t\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<span class="c"\n\t\t\t\t\t\t\t\t\t\t\t\t\tv-html="renderDieValue(attribute.value)"\n\t\t\t\t\t\t\t\t\t\t\t\t></span>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<div class="attribute-name"\n\t\t\t\t\t\t\t\t\t\t\t\t\tv-html="attribute.name"\n\t\t\t\t\t\t\t\t\t\t\t\t></div>\n\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t<transition name="editor" appear>\n\t\t\t\t\t\t\t\t\t\t\t\t<trait-editor\n\t\t\t\t\t\t\t\t\t\t\t\t\t:character="character"\n\t\t\t\t\t\t\t\t\t\t\t\t\t:open="isSelected([\'trait\', attributesID, a])"\n\t\t\t\t\t\t\t\t\t\t\t\t\tv-show="submode === \'edit\' && isSelected([\'trait\', attributesID, a])"\n\t\t\t\t\t\t\t\t\t\t\t\t\t:traitSetID="attributesID"\n\t\t\t\t\t\t\t\t\t\t\t\t\t:traitID="a"\n\t\t\t\t\t\t\t\t\t\t\t\t\t:viewY="viewY"\n\t\t\t\t\t\t\t\t\t\t\t\t\t@selectElement="selectElement"\n\t\t\t\t\t\t\t\t\t\t\t\t\t@updateCharacter="updateCharacter"\n\t\t\t\t\t\t\t\t\t\t\t\t\t@removeTrait="removeTrait"\n\t\t\t\t\t\t\t\t\t\t\t\t></trait-editor>\n\t\t\t\t\t\t\t\t\t\t\t</transition>\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\x3c!-- BUTTON: ADD ATTRIBUTE --\x3e\n\t\t\t\t\t\t\t\t<transition appear>\n\t\t\t\t\t\t\t\t<div class="preview-button-container"\n\t\t\t\t\t\t\t\t\tv-show="submode === \'edit\'"\n\t\t\t\t\t\t\t\t\tv-if="pageLocation === \'right\'"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div class="preview-button"\n\t\t\t\t\t\t\t\t\t\t@click.stop="addTrait( attributesID )"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span><i class="fas fa-plus"></i> Attribute</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</transition>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\x3c!-- TRAIT SETS --\x3e\n\t\t\t\t\t\t\t<template v-for="(traitSet, s) in traitSets" :key="s">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div :class="\'trait-set trait-set-style-\' + traitSet.style"\n\t\t\t\t\t\t\t\tv-if="traitSet.location === pageLocation"\n\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t<div class="trait-set-header">\n\n\t\t\t\t\t\t\t\t\t<transition appear>\n\t\t\t\t\t\t\t\t\t\t<div :class="{\'trait-set-header-inner\': true, \'selected\': isSelected([\'traitSet\', s])}"\n\t\t\t\t\t\t\t\t\t\t\t@click.stop="selectElement([ \'traitSet\', s ])"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div v-html="traitSet.name"></div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</transition>\n\n\t\t\t\t\t\t\t\t\t<transition name="editor" appear>\n\t\t\t\t\t\t\t\t\t\t<trait-set-editor\n\t\t\t\t\t\t\t\t\t\t\t:character="character"\n\t\t\t\t\t\t\t\t\t\t\t:open="isSelected([\'traitSet\', s])"\n\t\t\t\t\t\t\t\t\t\t\tv-show="submode === \'edit\' && isSelected([\'traitSet\', s])"\n\t\t\t\t\t\t\t\t\t\t\t:traitSetID="s"\n\t\t\t\t\t\t\t\t\t\t\t:viewY="viewY"\n\t\t\t\t\t\t\t\t\t\t\t@selectElement="selectElement"\n\t\t\t\t\t\t\t\t\t\t\t@updateCharacter="updateCharacter"\n\t\t\t\t\t\t\t\t\t\t\t@removeTraitSet="removeTraitSet"\n\t\t\t\t\t\t\t\t\t\t></trait-set-editor>\n\t\t\t\t\t\t\t\t\t</transition>\n\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class="trait-columns">\n\t\t\t\t\t\t\t\t\t<div class="trait-column" v-for="traitSetLocation in [\'left\', \'right\']">\n\n\t\t\t\t\t\t\t\t\t\t<template v-for="(trait, t) in traitSet.traits" :key="t">\n\t\t\t\t\t\t\t\t\t\t\t<div class="trait"\n\t\t\t\t\t\t\t\t\t\t\t\t\tv-if="trait.location === traitSetLocation"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<transition name="trait" appear>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div :class="{ \'trait-inner\': true, \'selected\': isSelected([\'trait\', s, t]) }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@click.stop="selectElement([ \'trait\', s, t ])"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h2 class="trait-title">\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="trait-name"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tv-html="trait.name"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="trait-value">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span :class="{ \'c\': true, \'active\': trait.value === 4 }" >4</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span :class="{ \'c\': true, \'active\': trait.value === 6 }" >6</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span :class="{ \'c\': true, \'active\': trait.value === 8 }" >8</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span :class="{ \'c\': true, \'active\': trait.value === 10 }">0</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span :class="{ \'c\': true, \'active\': trait.value === 12 }">2</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass="trait-description"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tv-if="traitSet.features.includes(\'description\')"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tv-html="renderText(trait.description)"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t></div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ul class="trait-sfx" v-if="traitSet.features.includes(\'sfx\') && trait.sfx.length">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li v-for="(sfx, s) in trait.sfx">\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="trait-sfx-name"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tv-html="sfx.name"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></span>:\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="trait-sfx-description"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tv-html="renderText(sfx.description)"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></span>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</transition>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<transition name="editor" appear>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<trait-editor\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:character="character"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:open="isSelected([\'trait\', s, t])"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tv-show="submode === \'edit\' && isSelected([\'trait\', s, t])"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:traitSetID="s"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:traitID="t"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:viewY="viewY"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@selectElement="selectElement"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@updateCharacter="updateCharacter"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@removeTrait="removeTrait"\n\t\t\t\t\t\t\t\t\t\t\t\t\t></trait-editor>\n\t\t\t\t\t\t\t\t\t\t\t\t</transition>\n\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</template>\n\n\t\t\t\t\t\t\t\t\t\t\x3c!-- BUTTON: ADD TRAIT --\x3e\n\t\t\t\t\t\t\t\t\t\t<transition appear>\n\t\t\t\t\t\t\t\t\t\t<div class="preview-button-container"\n\t\t\t\t\t\t\t\t\t\t\tv-show="submode === \'edit\'"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div class="preview-button"\n\t\t\t\t\t\t\t\t\t\t\t\t@click.stop="addTrait( s, traitSetLocation )"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span><i class="fas fa-plus"></i> {{ traitSet.noun && traitSet.noun.length ? traitSet.noun : \'Trait\' }}</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</transition>\n\n\t\t\t\t\t\t\t\t\t</div> \x3c!-- .trait-column --\x3e\n\t\t\t\t\t\t\t\t</div> \x3c!-- .trait-columns --\x3e\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</template>\n\n\t\t\t\t\t\t\t\x3c!-- BUTTON: ADD TRAIT SET --\x3e\n\t\t\t\t\t\t\t<transition appear>\n\t\t\t\t\t\t\t<div class="preview-button-container"\n\t\t\t\t\t\t\t\tv-show="submode === \'edit\'"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div class="preview-button"\n\t\t\t\t\t\t\t\t\t@click.stop="addTraitSet( pageLocation )"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span><i class="fas fa-plus"></i> Trait Set</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</transition>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div> \x3c!-- .columns --\x3e\n\t\t\t\t</div> \x3c!-- .page-inner --\x3e\n\t\t\t</div> \x3c!-- .page --\x3e\n\t\t</div> \x3c!-- .pages --\x3e\n\t</section>',methods:{isSelected(t){return cortexFunctions.arraysMatch(this.editing,t)},renderText:t=>t=(t=(t=t.replace(/d\d*(\d)/g,'<span class="c">$1</span>')).replace(/([^A-Za-z])PP([^A-Za-z])/gi,'$1<span class="pp">PP</span>$2')).replace("\n","<br>"),renderDieValue:t=>cortexFunctions.getDieDisplayValue(t),getAttributeStyle(t){let e;return e=1===this.attributes.length?.5:t/(this.attributes.length-1),`left: ${61*e+8+3.5}mm; top: ${10*Math.sin(e*Math.PI)+7-3}mm;`},selectElement(t){"edit"===this.submode&&this.$emit("selectElement",t)},clearSelected(){this.$emit("selectElement",[])},addTraitSet(t){let e=this.character;e.traitSets.push({name:"New trait set",description:"Trait set description",style:"default",location:t??"left",traits:[{name:"New trait",value:6,description:"Trait description",location:"left",sfx:[]}]}),this.updateCharacter(e);let i=e.traitSets.length-1;this.selectElement(["traitSet",i])},removeTraitSet(t){this.clearSelected();let e=this.character;e.traitSets.splice(t,1),this.updateCharacter(e)},addTrait(t,e){let i=this.character,a=i.traitSets[t],n=a.noun&&a.noun.length?a.noun:"Trait";i.traitSets[t].traits.push({name:"New "+n,value:6,description:"Trait description",location:e??"left",sfx:[]}),this.updateCharacter(i);let r=i.traitSets[t].traits.length-1;this.selectElement(["trait",t,r])},removeTrait(t,e){this.clearSelected(),setTimeout((()=>{let i=this.character;i.traitSets[t].traits.splice(e,1),this.updateCharacter(i)}),200)},updateCharacter(t){this.$emit("updateCharacter",t)},exportCharacter(){this.$emit("exportCharacter",this.character.id)},print(){window.print()}}},NameEditor={props:{character:Object,open:Boolean},data:()=>({}),computed:{name:{get(){return this.character.name},set(t){this.setCharacterProperty("name",t)}},description:{get(){return this.character.description},set(t){this.setCharacterProperty("description",t)}},pronouns:{get(){return this.character.pronouns??""},set(t){this.setCharacterProperty("pronouns",t)}}},template:'<aside :class="{ \'editor\': true, \'editor-character\': true, \'open\': open, \'scrollable\': false }" @click.stop="">\n\n\t\t<div class="editor-arrow"></div>\n\n\t\t<div class="editor-controls">\n\t\t\t<button @click.stop="selectElement([])"><i class="fas fa-times"></i></button>\n\t\t</div>\n\n\t\t<div class="editor-inner">\n\t\t\t<div>\n\n\t\t\t\t<div class="editor-fields">\n\n\t\t\t\t\t<div class="editor-field">\n\t\t\t\t\t\t<label>Character Name</label>\n\t\t\t\t\t\t<input type="text" v-model="name" ref="inputName">\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class="editor-field">\n\t\t\t\t\t\t<label>Pronouns</label>\n\t\t\t\t\t\t<input type="text" v-model="pronouns">\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class="editor-field">\n\t\t\t\t\t\t<label>Description</label>\n\t\t\t\t\t\t<textarea v-model="description"></textarea>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t</aside>',watch:{open(t,e){t&&!e&&this.focusFirstInput()}},methods:{selectElement(t){this.$emit("selectElement",t)},async focusFirstInput(){await Vue.nextTick(),this.$refs.inputName.focus()},setCharacterProperty(t,e){let i=this.character;i[t]=e,this.updateCharacter(i)},updateCharacter(t){this.$emit("updateCharacter",t)},doNothing(){}}},TraitSetEditor={props:{character:Object,traitSetID:Number,open:Boolean,viewY:Number},data:()=>({scrollPosition:"none",anchorPosition:"top",styleOptions:[{id:"default",label:"Default"},{id:"two-columns-compact",label:"Two Columns (Compact)"},{id:"two-columns-detailed",label:"Two Columns (Detailed)"},{id:"distinctions",label:"Distinctions"},{id:"assets",label:"Assets"},{id:"resources",label:"Resources"},{id:"stress",label:"Stress"}]}),computed:{traitSet(){let t=this.traitSetID;return this.character.traitSets[t]},name:{get(){return this.traitSet.name},set(t){this.setTraitSetProperty("name",t)}},description:{get(){return this.traitSet.description},set(t){this.setTraitSetProperty("description",t)}},style:{get(){return this.traitSet.style},set(t){this.setTraitSetProperty("style",t)}},noun:{get(){return this.traitSet.noun??""},set(t){this.setTraitSetProperty("noun",t)}},features:{get(){return this.traitSet.features},set(t){}},cssClass(){let t={editor:!0,open:this.open,scrollable:!1};return t["anchor-position-"+this.anchorPosition]=!0,t}},template:'<aside :class="cssClass" @click.stop="">\n\n\t\t<div class="editor-arrow"></div>\n\n\t\t<div class="editor-controls">\n\t\t\t<button @click.stop="selectElement([])"><i class="fas fa-times"></i></button>\n\t\t\t<button class="editor-delete" @click.stop="removeTraitSet"><i class="fas fa-trash"></i></button>\n\t\t</div>\n\n\t\t<div class="editor-inner">\n\t\t\t<div>\n\n\t\t\t\t<div class="editor-fields">\n\n\t\t\t\t\t<div class="editor-field">\n\t\t\t\t\t\t<label>Trait Set Name</label>\n\t\t\t\t\t\t<input type="text" v-model="name" ref="inputName">\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class="editor-field" v-if="traitSet.location !== \'attributes\'">\n\t\t\t\t\t\t<label>Style</label>\n\t\t\t\t\t\t<select v-model="style">\n\t\t\t\t\t\t\t<option v-for="option in styleOptions" :value="option.id" :selected="option.id === style">{{ option.label }}</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class="editor-field">\n\t\t\t\t\t\t<label>Description</label>\n\t\t\t\t\t\t<textarea v-model="description"></textarea>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class="editor-field">\n\t\t\t\t\t\t<label>Singular Noun</label>\n\t\t\t\t\t\t<input type="text" v-model="noun" placeholder="Trait">\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class="editor-field">\n\t\t\t\t\t\t<div class="editor-toggles">\n\t\t\t\t\t\t\t<div><input type="checkbox" value="description" v-model="features" @change="setFeatures($event, \'description\')"></div>\n\t\t\t\t\t\t\t<div><label>Description</label></div>\n\t\t\t\t\t\t\t<div><input type="checkbox" value="sfx" v-model="features" @change="setFeatures($event, \'sfx\')"></div>\n\t\t\t\t\t\t\t<div><label>SFX</label></div>\n\t\t\t\t\t\t\t<div><input type="checkbox" value="hinder" v-model="features" @change="setFeatures($event, \'hinder\')"></div>\n\t\t\t\t\t\t\t<div><label>Hinder</label></div>\n\t\t\t\t\t\t\t<div><input type="checkbox" value="subtraits" v-model="features" @change="setFeatures($event, \'subtraits\')"></div>\n\t\t\t\t\t\t\t<div><label>Sub-Traits</label></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\n\t</aside>',mounted(){this.checkAnchorPosition(),this.open&&this.focusFirstInput()},watch:{character(){this.checkAnchorPosition()},viewY(){this.checkAnchorPosition()},open(t,e){t&&!e&&this.focusFirstInput()}},methods:{selectElement(t){this.$emit("selectElement",t)},async focusFirstInput(){await Vue.nextTick(),this.$refs.inputName.focus()},setTraitSetProperty(t,e){let i=this.character,a=this.traitSetID;i.traitSets[a][t]=e,this.updateCharacter(i)},removeTraitSet(){this.$emit("removeTraitSet",this.traitSetID)},setFeatures(t,e){let i=this.traitSetID,a=this.character.traitSets[i].features.indexOf(e),n=t.target.checked;n&&-1===a?this.character.traitSets[i].features.push(e):!n&&a>=0&&this.character.traitSets[i].features.splice(a,1),this.updateCharacter(this.character)},updateCharacter(t){this.$emit("updateCharacter",t)},checkAnchorPosition(){let t=window.innerHeight||html.clientHeight,e=this.$el.parentElement.getBoundingClientRect(),i=e.top+e.height/2;this.anchorPosition=i<t/2?"top":"bottom"}}},TraitEditor={props:{character:Object,traitSetID:Number,traitID:Number,open:Boolean,viewY:Number},data:()=>({scrollPosition:"none",anchorPosition:"top"}),computed:{traitSet(){let t=this.traitSetID;return this.character.traitSets[t]},trait(){let t=this.traitSetID,e=this.traitID;return this.character.traitSets[t].traits[e]},name:{get(){return this.trait.name},set(t){this.setTraitProperty("name",t)}},value:{get(){return this.trait.value},set(t){this.setTraitProperty("value",t)}},description:{get(){return this.trait.description},set(t){this.setTraitProperty("description",t)}},scrollable(){return Boolean(this.trait.sfx.length>0)},cssClass(){let t={editor:!0,open:this.open,scrollable:this.scrollable};return t["anchor-position-"+this.anchorPosition]=!0,this.scrollable&&(t["scroll-position-"+this.scrollPosition]=!0),t}},template:'<aside :class="cssClass" @click.stop="">\n\n\t\t<div class="editor-arrow"></div>\n\n\t\t<div class="editor-controls">\n\t\t\t<button @click.stop="selectElement([])"><i class="fas fa-times"></i></button>\n\t\t\t<button class="editor-delete" @click.stop="removeTrait"><i class="fas fa-trash"></i></button>\n\t\t</div>\n\n\t\t<div class="editor-inner">\n\t\t\t<div @scroll="checkScrollPosition">\n\t\n\t\t\t\t<div class="editor-fields">\n\n\t\t\t\t\t<div class="editor-field">\n\t\t\t\t\t\t<label>Trait Name</label>\n\t\t\t\t\t\t<input type="text" v-model="name" ref="inputName">\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class="editor-field">\n\n\t\t\t\t\t\t<label>Value</label>\n\n\t\t\t\t\t\t<ul class="editor-values">\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tv-for="value in [4,6,8,10,12]"\n\t\t\t\t\t\t\t\t:class="{ \'active\': value === trait.value }"\n\t\t\t\t\t\t\t\t@click.stop="toggleTraitValue( value )"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span class="c" v-html="getDieDisplayValue(value)"></span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class="editor-field" v-if="traitSet.features.includes(\'description\')">\n\t\t\t\t\t\t<label>Description</label>\n\t\t\t\t\t\t<textarea v-model="description"></textarea>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t\x3c!-- SFX --\x3e\n\t\t\t\t\t<div class="editor-field" v-if="traitSet.features.includes(\'sfx\')">\n\n\t\t\t\t\t\t<label>SFX</label>\n\n\t\t\t\t\t\t<transition-group appear>\n\t\t\t\t\t\t\t<sfx-editor\n\t\t\t\t\t\t\t\tv-for="(effect, effectID) in trait.sfx"\n\t\t\t\t\t\t\t\t:key="traitSetID + \'-\' + traitID + \'-\' + effectID"\n\t\t\t\t\t\t\t\t:character="character"\n\t\t\t\t\t\t\t\t:traitSetID="traitSetID"\n\t\t\t\t\t\t\t\t:traitID="traitID"\n\t\t\t\t\t\t\t\t:effectID="effectID"\n\t\t\t\t\t\t\t\t@updateCharacter="updateCharacter"\n\t\t\t\t\t\t\t\t@removeEffect="removeEffect"\n\t\t\t\t\t\t\t></sfx-editor>\n\t\t\t\t\t\t</transition-group>\n\n\t\t\t\t\t\t<div class="editor-button-container">\n\t\t\t\t\t\t\t<button class="editor-button" @click.stop="addEffect">\n\t\t\t\t\t\t\t\t<span><i class="fas fa-plus"></i> New SFX</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\n\t</aside>',mounted(){this.checkAnchorPosition(),this.checkScrollPosition(),this.open&&this.focusFirstInput()},watch:{character(){this.checkAnchorPosition()},viewY(){this.checkAnchorPosition()},open(t,e){t&&!e&&this.focusFirstInput()}},methods:{selectElement(t){this.$emit("selectElement",t)},async focusFirstInput(){await Vue.nextTick(),this.$refs.inputName.focus()},setTraitProperty(t,e){let i=this.character,a=this.traitSetID,n=this.traitID;i.traitSets[a].traits[n][t]=e,this.updateCharacter(i)},toggleTraitValue(t){t===this.trait.value&&(t=null),this.setTraitProperty("value",t)},removeTrait(){this.$emit("removeTrait",this.traitSetID,this.traitID)},addEffect(){let t=this.character,e=this.traitSetID,i=this.traitID;t.traitSets[e].traits[i].sfx.push({name:"New SFX",description:"SFX description"}),this.updateCharacter(t)},removeEffect(t){let e=this.character,i=this.traitSetID,a=this.traitID,n=t;e.traitSets[i].traits[a].sfx.splice(n,1),this.updateCharacter(e)},updateCharacter(t){this.$emit("updateCharacter",t)},checkAnchorPosition(){let t=window.innerHeight||html.clientHeight,e=this.$el.parentElement.getBoundingClientRect(),i=e.top+e.height/2;this.anchorPosition=i<t/2?"top":"bottom"},checkScrollPosition(){let t=this.$el.querySelector(".editor-inner > div"),e=t.scrollTop,i=t.scrollHeight-t.clientHeight;this.scrollPosition=i<=0?"none":0!==e?e>=i-1?"bottom":"middle":"top"},getDieDisplayValue:t=>cortexFunctions.getDieDisplayValue(t)}},SfxEditor={props:{character:Object,selected:Array,traitSetID:Number,traitID:Number,effectID:Number},data:()=>({}),computed:{effect(){let t=this.traitSetID,e=this.traitID,i=this.effectID;return this.character.traitSets[t].traits[e].sfx[i]},selector(){return["sfx",this.traitSetID,this.traitID,this.effectID]},name:{get(){return this.effect.name},set(t){this.setEffectProperty("name",t)}},description:{get(){return this.effect.description},set(t){this.setEffectProperty("description",t)}}},template:'<section class="editor-subgroup">\n\t\n\t\t<div class="editor-fields">\n\n\t\t\t<div class="editor-field">\n\t\t\t\t<label>SFX Name</label>\n\t\t\t\t<input type="text" v-model="name">\n\t\t\t</div>\n\n\t\t\t<div class="editor-field">\n\t\t\t\t<label>SFX Description</label>\n\t\t\t\t<textarea v-model="description"></textarea>\n\t\t\t</div>\n\n\t\t\t<div class="editor-button-container">\n\t\t\t\t<button class="editor-button editor-button-remove editor-button-secondary" @click.prevent="removeEffect">\n\t\t\t\t\t<span><i class="fas fa-trash"></i> Remove SFX</span>\n\t\t\t\t</button>\n\t\t\t</div>\n\n\t\t</div>\n\n\t</section>',methods:{setEffectProperty(t,e){let i=this.character,a=this.traitSetID,n=this.traitID,r=this.effectID;i.traitSets[a].traits[n].sfx[r][t]=e,this.updateCharacter(i)},updateCharacter(t){this.$emit("updateCharacter",t)},removeEffect(){this.$emit("removeEffect",this.effectID)}}},PortraitEditor={props:{character:Object,open:Boolean},data:()=>({}),computed:{hasImage(){return Boolean(this.character.portrait.url.length)},alignment:{get(){return this.character.portrait.alignment},set(t){this.setAlignment(t)}}},template:'<aside :class="{ \'editor\': true, \'editor-portrait\': true, \'open\': open, \'scrollable\': false, \'anchor-position-top\': true }" @click.stop="">\n\n\t\t<div class="editor-arrow"></div>\n\n\t\t<div class="editor-controls">\n\t\t\t<button @click.stop="selectElement([])"><i class="fas fa-times"></i></button>\n\t\t\t<button v-if="hasImage" class="editor-delete" @click.stop="setImageURL(\'\')"><i class="fas fa-trash"></i></button>\n\t\t</div>\n\n\t\t<div class="editor-inner">\n\t\t\t<div>\n\n\t\t\t\t<div class="editor-fields">\n\n\t\t\t\t\t<div class="editor-field">\n\n\t\t\t\t\t\t<label>Portrait</label>\n\n\t\t\t\t\t\t<img class="portrait-preview"\n\t\t\t\t\t\t\tv-if="hasImage"\n\t\t\t\t\t\t\t:src="character?.portrait?.url"\n\t\t\t\t\t\t\t@click.prevent="uploadStart"\n\t\t\t\t\t\t>\n\n\t\t\t\t\t\t<div class="editor-button-container">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass="editor-button"\n\t\t\t\t\t\t\t\t@click.prevent="uploadStart"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span><i class="fas fa-plus"></i> Upload {{ hasImage ? \'New\' : \'\' }} Image</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<input class="portrait-input" type="file" ref="inputFile" @change="uploadProcess">\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class="editor-field" v-if="hasImage">\n\n\t\t\t\t\t\t<label>Alignment</label>\n\n\t\t\t\t\t\t<div class="editor-portrait-alignment">\n\t\t\t\t\t\t\t<div @click.stop="setAlignment(\'top-left\')"      :class="{\'active\': alignment === \'top-left\' }"></div>\n\t\t\t\t\t\t\t<div @click.stop="setAlignment(\'top-center\')"    :class="{\'active\': alignment === \'top-center\' }"></div>\n\t\t\t\t\t\t\t<div @click.stop="setAlignment(\'top-right\')"     :class="{\'active\': alignment === \'top-right\' }"></div>\n\t\t\t\t\t\t\t<div @click.stop="setAlignment(\'center-left\')"   :class="{\'active\': alignment === \'center-left\' }"></div>\n\t\t\t\t\t\t\t<div @click.stop="setAlignment(\'center\')"        :class="{\'active\': alignment === \'center\' }"></div>\n\t\t\t\t\t\t\t<div @click.stop="setAlignment(\'center-right\')"  :class="{\'active\': alignment === \'center-right\' }"></div>\n\t\t\t\t\t\t\t<div @click.stop="setAlignment(\'bottom-left\')"   :class="{\'active\': alignment === \'bottom-left\' }"></div>\n\t\t\t\t\t\t\t<div @click.stop="setAlignment(\'bottom-center\')" :class="{\'active\': alignment === \'bottom-center\' }"></div>\n\t\t\t\t\t\t\t<div @click.stop="setAlignment(\'bottom-right\')"  :class="{\'active\': alignment === \'bottom-right\' }"></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\n\t</aside>',methods:{selectElement(t){this.$emit("selectElement",t)},uploadStart(){this.$refs.inputFile.click()},setImageURL(t){let e=this.character;e.portrait.url=t,this.updateCharacter(e)},setAlignment(t){let e=this.character;e.portrait.alignment=t,this.updateCharacter(e)},uploadProcess(t){if(!t.target.files||!t.target.files.length)return this.setImageURL(""),void this.setAlignment("center");let e=t.target.files[0],i=new FileReader;i.readAsDataURL(e),i.onload=()=>{this.setImageURL(i.result)},i.onerror=t=>{console.error("Portrait error: ",t)}},updateCharacter(t){this.$emit("updateCharacter",t)}}},cortexCharacterDefault={$schema:"https://cortex.engard.me/data/cortex_character_schema.json",version:1,id:null,created:0,modified:0,name:"Name",description:"Description",pronouns:"",traitSets:[{name:"Distinctions",description:"Trait set description",features:["description","sfx","hinder"],style:"distinctions",location:"left",noun:"Distinction",traits:[{name:"Distinction 1",value:8,description:"Trait description",location:"left",sfx:[{name:"Hinder",description:"Gain a PP when you switch out this distinction’s d8 for a d4."}]},{name:"Distinction 2",value:8,description:"Trait description",location:"left",sfx:[{name:"Hinder",description:"Gain a PP when you switch out this distinction’s d8 for a d4."}]},{name:"Distinction 3",value:8,description:"Trait description",location:"left",sfx:[{name:"Hinder",description:"Gain a PP when you switch out this distinction’s d8 for a d4."}]}]},{name:"Attributes",description:"Trait set description",features:[],style:"default",location:"attributes",noun:"Attribute",allowStatement:!0,allowSFX:!1,allowHinder:!1,traits:[{name:"Attribute 1",value:8,description:"Trait description",sfx:[]}]},{name:"New trait set",description:"Trait set description",features:[],style:"default",location:"left",noun:"",allowStatement:!0,allowSFX:!1,allowHinder:!1,traits:[{name:"New trait",value:6,description:"Trait description",location:"left",sfx:[]}]}],portrait:{url:"",alignment:"center"}};document.addEventListener("DOMContentLoaded",(()=>{app=Vue.createApp({name:"cortex-toolkit",data:()=>({characters:[],characterID:null,viewY:null,mode:"roster",submode:null,editing:null}),computed:{baseURL:()=>window.location.href,characterIndex(){return this.characters.findIndex((t=>t.id===this.characterID))},character(){return this.characters[this.characterIndex]}},template:'<header class="header">\n\t\t\t\t<div class="header-inner">\n\t\t\t\t\t<nav class="nav-mode">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li @click.stop="setMode(\'roster\', null)" :class="{ active: mode === \'roster\' }"><div><span class="nav-mode-icon"><i class="fas fa-users"></i></span></div></li>\n\t\t\t\t\t\t\t<li @click.stop="setMode(\'character\', \'edit\')" :class="{ active: mode === \'character\' && submode === \'edit\', \'disabled\': !character }"><div><span class="nav-mode-icon"><i class="fas fa-pencil"></i></span> <span class="nav-mode-label">Create</span></div></li>\n\t\t\t\t\t\t\t<li @click.stop="setMode(\'character\', \'play\')" :class="{ active: mode === \'character\' && submode === \'play\', \'disabled\': !character }"><div><span class="nav-mode-icon"><i class="fas fa-dice"></i></span> <span class="nav-mode-label">Play</span></div></li>\n\t\t\t\t\t\t\t<li @click.stop="setMode(\'character\', \'print\')" :class="{ active: mode === \'character\' && submode === \'print\', \'disabled\': !character }"><div><span class="nav-mode-icon"><i class="fas fa-file"></i></span> <span class="nav-mode-label">Share</span></div></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t</header>\n\n\t\t\t<aside class="sidebar">\n\t\t\t\t<div class="sidebar-inner">\n\t\t\t\t</div>\n\t\t\t</aside>\n\n\t\t\t<main class="main" ref="main" @scroll="setViewY"\n\t\t\t\t@click.stop="clearSelected"\n\t\t\t>\n\t\t\t\n\t\t\t\t\x3c!-- CHARACTER SHEET --\x3e\n\t\t\t\t<transition mode="out-in">\n\n\t\t\t\t\t<roster\n\t\t\t\t\t\tv-if="mode === \'roster\'"\n\t\t\t\t\t\t:characters="characters"\n\t\t\t\t\t\t@createCharacter="createCharacter"\n\t\t\t\t\t\t@loadCharacter="loadCharacter"\n\t\t\t\t\t\t@exportCharacter="exportCharacter"\n\t\t\t\t\t\t@deleteCharacter="deleteCharacter"\n\t\t\t\t\t\t@importCharacter="importCharacter"\n\t\t\t\t\t></roster>\n\n\t\t\t\t\t<character-sheet\n\t\t\t\t\t\tv-else-if="mode === \'character\' && character"\n\t\t\t\t\t\t:submode="submode"\n\t\t\t\t\t\t:character="character"\n\t\t\t\t\t\t:editing="editing"\n\t\t\t\t\t\t:viewY="viewY"\n\t\t\t\t\t\t@selectElement="selectElement"\n\t\t\t\t\t\t@updateCharacter="updateCharacter"\n\t\t\t\t\t\t@exportCharacter="exportCharacter"\n\t\t\t\t\t></character-sheet>\n\n\t\t\t\t</transition>\n\n\t\t\t</main>\n\n\t\t\t<footer class="footer">\n\n\t\t\t\t<div class="about-logo">\n\t\t\t\t\t<a href="https://cortexrpg.com" target="_blank"><img src="images/cortex_community_logo_white.png"></a>\n\t\t\t\t</div>\n\n\t\t\t\t<div class="about-legal">\n\t\t\t\t\t<p>Cortex Prime is the award-winning world-building tabletop RPG system for forging unique, compelling game experiences from a set of modular rules mechanics available at CortexRPG.com </p>\n\t\t\t\t\t<p>Cortex is ©️ 2022 Fandom, Inc. Cortex, Cortex Prime, associated logos and trade dress are the trademarks of Fandom, Inc. Iconography used with permission.</p>\n\t\t\t\t\t<p>If you wish to publish or sell what you make using this tool, it is your responsibility to ensure you have the proper license or right for any resources used. No rights are granted through the use of this tool.</p>\n\t\t\t\t</div>\n\n\t\t\t</footer>',mounted(){this.setViewY(),this.loadLocalData()},watch:{mode(){this.setPageTitle()},characterID(){this.setPageTitle()}},methods:{setMode(t,e){("character"!==t||this.character)&&(this.mode=t,this.submode=e)},setViewY(){this.viewY=this.$refs.main.scrollTop},setPageTitle(){pageTitle="Cortex Toolkit","character"===this.mode&&this.character&&this.character.name.length&&(pageTitle=`${this.character.name} - ${pageTitle}`),document.title=pageTitle},createCharacter(){let t=structuredClone(cortexCharacterDefault);t.id=crypto.randomUUID(),t.created=(new Date).getTime(),t.modified=(new Date).getTime(),this.characters.push(t),this.characterID=t.id,this.setMode("character",this.submode??"edit"),this.saveLocalData()},deleteCharacter(t){let e=this.characters.findIndex((e=>e.id===t));-1!==e&&(this.setMode("roster",null),this.characterID=null,this.characters.splice(e,1),this.setPageTitle(),this.saveLocalData())},importCharacter(t,e){let i=this.characters.findIndex((e=>e.id===t.id));-1!==i?this.characters[i]=t:this.characters.push(t),this.saveLocalData()},loadCharacter(t){this.characterID=t,this.setMode("character",this.submode??"edit")},exportCharacter(t){let e=this.characters.find((e=>e.id===t)),i=encodeURI("data:application/json;charset=utf-8,"+JSON.stringify(e,null,2)).replace(/#/g,"%23"),a=e.name.length?e.name:"Name";a=a.replaceAll(/\s+/g,"_");let n=`${a}_${e.modified}.cortex.json`,r=document.createElement("a");document.body.appendChild(r),r.setAttribute("href",i),r.setAttribute("download",n),r.click(),r.remove()},exportAllCharacters(){let t=encodeURI("data:application/json;charset=utf-8,"+JSON.stringify(this.characters)).replace(/#/g,"%23"),e=`CortexToolkitData_${(new Date).getTime()}.json`,i=document.createElement("a");document.body.appendChild(i),i.setAttribute("href",t),i.setAttribute("download",e),i.click(),i.remove()},updateCharacter(t){let e=this.characters.findIndex((e=>e.id===t.id));-1!==e&&(t.modified=(new Date).getTime(),this.characters[e]=t,this.setPageTitle(),this.saveLocalData())},selectElement(t){cortexFunctions.arraysMatch(this.editing,t)?this.editing=[]:this.editing=t},clearSelected(){this.selectElement([])},loadLocalData(){let t=[],e=localStorage.getItem("cortexToolkitData");if(e&&e.length){let i=JSON.parse(e);i&&i.characters&&(t=i.characters)}this.characters=t},saveLocalData(){localStorage.setItem("cortexToolkitData",JSON.stringify({characters:this.characters}))}}}).component("roster",Roster).component("character-sheet",CharacterSheet).component("name-editor",NameEditor).component("portrait-editor",PortraitEditor).component("trait-editor",TraitEditor).component("trait-set-editor",TraitSetEditor).component("sfx-editor",SfxEditor).mount("#cortex-toolkit")}));
