window.cortexFunctions={arraysMatch:function(t,e){if(!Array.isArray(t)||!Array.isArray(e))return!1;if(t.length!==e.length)return!1;for(let a=0;a<t.length;a++)if(t[a]!==e[a])return!1;return!0},getDieDisplayValue:function(t){switch(t){case 4:return"4";case 6:return"6";case 8:return"8";case 10:return"0";case 12:return"2";default:return""}}};const CharacterSheet={props:{character:Object,selectedCharacterPart:Array,viewY:Number},computed:{name(){return this.character?.name??""},description(){return this.character?.description??""},portrait(){return this.character?.portrait??null},traitSets(){return this.character?.traitSets??[]},distinctions(){return this.traitSets.find((t=>"distinctions"===t.style))},attributes(){return this.traitSets.find((t=>"attributes"===t.location))?.traits||[]},attributesID(){return this.traitSets.findIndex((t=>"attributes"===t.location))}},template:'<section class="character-sheet" @click.stop="clearSelected">\n\t\n\t\t<div class="pages">\n\n\t\t\t\x3c!-- PAGE --\x3e\n\t\t\t<div class="page">\n\t\t\t\t<div class="page-inner">\n\n\t\t\t\t\t<header class="page-header">\n\n\t\t\t\t\t\t<div :class="{\'page-header-inner\': true, \'selected\': isSelected([\'name\'])}"\n\t\t\t\t\t\t\t@click.stop="selectCharacterPart([ \'name\' ])"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t\x3c!-- CHARACTER NAME --\x3e\n\t\t\t\t\t\t\t\t<div class="title-container">\n\n\t\t\t\t\t\t\t\t\t<div class="title"\n\t\t\t\t\t\t\t\t\t\tv-html="name"\n\t\t\t\t\t\t\t\t\t></div>\n\n\t\t\t\t\t\t\t\t\t<div class="title-decoration">\n\t\t\t\t\t\t\t\t\t\t<svg height="4" width="100%"><line x1="0" y1="0" x2="10000" y2="0" style="stroke:#C50852;stroke-width:4pt"/></svg>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\x3c!-- CHARACTER DESCRIPTION --\x3e\n\t\t\t\t\t\t\t\t<div class="subtitle">\n\t\t\t\t\t\t\t\t\t<span v-html="renderText(description)"></span>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<transition name="editor" appear>\n\t\t\t\t\t\t\t<name-editor\n\t\t\t\t\t\t\t\t:character="character"\n\t\t\t\t\t\t\t\t:open="isSelected([\'name\'])"\n\t\t\t\t\t\t\t\tv-show="isSelected([\'name\'])"\n\t\t\t\t\t\t\t\t@selectCharacterPart="selectCharacterPart"\n\t\t\t\t\t\t\t\t@update="update"\n\t\t\t\t\t\t\t></name-editor>\n\t\t\t\t\t\t</transition>\n\n\t\t\t\t\t</header>\n\n\t\t\t\t\t\x3c!-- COLUMNS --\x3e\n\t\t\t\t\t<div class="columns">\n\n\t\t\t\t\t\t<div v-for="pageLocation in [\'left\', \'right\']" :class="\'column-\' + pageLocation">\n\n\t\t\t\t\t\t\t\x3c!-- PORTRAIT --\x3e\n\t\t\t\t\t\t\t<div class="portrait" v-if="pageLocation === \'right\'">\n\n\t\t\t\t\t\t\t\t<div :class="{ \'portrait-inner\': true, \'selected\': isSelected([\'portrait\']) }"\n\t\t\t\t\t\t\t\t\t@click.stop="selectCharacterPart([ \'portrait\' ])"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div class="portrait-circle" width="100%" height="100%" :style="\'background-image: url(\' + portrait.url + \');\'"></div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<transition name="editor" appear>\n\t\t\t\t\t\t\t\t\t<portrait-editor\n\t\t\t\t\t\t\t\t\t\t:character="character"\n\t\t\t\t\t\t\t\t\t\t:open="isSelected([\'portrait\'])"\n\t\t\t\t\t\t\t\t\t\tv-show="isSelected([\'portrait\'])"\n\t\t\t\t\t\t\t\t\t\t@selectCharacterPart="selectCharacterPart"\n\t\t\t\t\t\t\t\t\t\t@update="update"\n\t\t\t\t\t\t\t\t\t></portrait-editor>\n\t\t\t\t\t\t\t\t</transition>\n\t\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\x3c!-- ATTRIBUTES --\x3e\n\t\t\t\t\t\t\t<div :class="{ \'attributes\': true, \'vertical\': attributes.length > 5 }" v-if="pageLocation === \'right\'">\n\n\t\t\t\t\t\t\t\t<div class="attributes-grid">\n\n\t\t\t\t\t\t\t\t\t<div class="attribute-curve" xmlns="http://www.w3.org/2000/svg"\n\t\t\t\t\t\t\t\t\t\t:style="\'display: \' + ( attributes.length >= 2 ? \'block\' : \'none\' ) + \';\'"\n\t\t\t\t\t\t\t\t\t\tv-if="pageLocation === \'right\'"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<svg viewBox="0 0 62 62" width="62mm" height="30mm" preserveAspectRatio="xMidYMid slice">\n\t\t\t\t\t\t\t\t\t\t\t<path d="M -17 -25 A 32 32 0 0 0 79 0" stroke="#C50852" stroke-width="0.5mm" fill="transparent" vector-effect="non-scaling-stroke"/>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div class="attributes-items"\n\t\t\t\t\t\t\t\t\t\tv-if="pageLocation === \'right\'"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<div v-for="( attribute, a ) in attributes"\n\t\t\t\t\t\t\t\t\t\t\tclass="attribute"\n\t\t\t\t\t\t\t\t\t\t\t:style="getAttributeStyle( a )"\n\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t<div class="attribute-inner"\n\t\t\t\t\t\t\t\t\t\t\t\t:class="{ \'attribute-inner\': true, \'selected\': isSelected([\'trait\', attributesID, a]) }"\n\t\t\t\t\t\t\t\t\t\t\t\t@click.stop="selectCharacterPart([ \'trait\', attributesID, a ])"\n\t\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<span class="c"\n\t\t\t\t\t\t\t\t\t\t\t\t\tv-html="renderDieValue(attribute.value)"\n\t\t\t\t\t\t\t\t\t\t\t\t></span>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<div class="attribute-name"\n\t\t\t\t\t\t\t\t\t\t\t\t\tv-html="attribute.name"\n\t\t\t\t\t\t\t\t\t\t\t\t></div>\n\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t<transition name="editor" appear>\n\t\t\t\t\t\t\t\t\t\t\t\t<trait-editor\n\t\t\t\t\t\t\t\t\t\t\t\t\t:character="character"\n\t\t\t\t\t\t\t\t\t\t\t\t\t:open="isSelected([\'trait\', attributesID, a])"\n\t\t\t\t\t\t\t\t\t\t\t\t\tv-show="isSelected([\'trait\', attributesID, a])"\n\t\t\t\t\t\t\t\t\t\t\t\t\t:traitSetID="attributesID"\n\t\t\t\t\t\t\t\t\t\t\t\t\t:traitID="a"\n\t\t\t\t\t\t\t\t\t\t\t\t\t:viewY="viewY"\n\t\t\t\t\t\t\t\t\t\t\t\t\t@selectCharacterPart="selectCharacterPart"\n\t\t\t\t\t\t\t\t\t\t\t\t\t@update="update"\n\t\t\t\t\t\t\t\t\t\t\t\t\t@removeTrait="removeTrait"\n\t\t\t\t\t\t\t\t\t\t\t\t></trait-editor>\n\t\t\t\t\t\t\t\t\t\t\t</transition>\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\x3c!-- BUTTON: ADD ATTRIBUTE --\x3e\n\t\t\t\t\t\t\t\t<div class="preview-button-container"\n\t\t\t\t\t\t\t\t\tv-if="pageLocation === \'right\'"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div class="preview-button"\n\t\t\t\t\t\t\t\t\t\t@click.stop="addTrait( attributesID )"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span><i class="fas fa-plus"></i> New Attribute</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\x3c!-- TRAIT SETS --\x3e\n\t\t\t\t\t\t\t<template v-for="(traitSet, s) in traitSets" :key="s">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div :class="\'trait-set trait-set-style-\' + traitSet.style"\n\t\t\t\t\t\t\t\tv-if="traitSet.location === pageLocation"\n\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t<div class="trait-set-header">\n\n\t\t\t\t\t\t\t\t\t<transition appear>\n\t\t\t\t\t\t\t\t\t\t<div :class="{\'trait-set-header-inner\': true, \'selected\': isSelected([\'traitSet\', s])}"\n\t\t\t\t\t\t\t\t\t\t\t@click.stop="selectCharacterPart([ \'traitSet\', s ])"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div v-html="traitSet.name"></div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</transition>\n\n\t\t\t\t\t\t\t\t\t<transition name="editor" appear>\n\t\t\t\t\t\t\t\t\t\t<trait-set-editor\n\t\t\t\t\t\t\t\t\t\t\t:character="character"\n\t\t\t\t\t\t\t\t\t\t\t:open="isSelected([\'traitSet\', s])"\n\t\t\t\t\t\t\t\t\t\t\tv-show="isSelected([\'traitSet\', s])"\n\t\t\t\t\t\t\t\t\t\t\t:traitSetID="s"\n\t\t\t\t\t\t\t\t\t\t\t:viewY="viewY"\n\t\t\t\t\t\t\t\t\t\t\t@selectCharacterPart="selectCharacterPart"\n\t\t\t\t\t\t\t\t\t\t\t@update="update"\n\t\t\t\t\t\t\t\t\t\t\t@removeTraitSet="removeTraitSet"\n\t\t\t\t\t\t\t\t\t\t></trait-set-editor>\n\t\t\t\t\t\t\t\t\t</transition>\n\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class="trait-columns">\n\t\t\t\t\t\t\t\t\t<div class="trait-column" v-for="traitSetLocation in [\'left\', \'right\']">\n\n\t\t\t\t\t\t\t\t\t\t<template v-for="(trait, t) in traitSet.traits" :key="t">\n\t\t\t\t\t\t\t\t\t\t\t<div class="trait"\n\t\t\t\t\t\t\t\t\t\t\t\t\tv-if="trait.location === traitSetLocation"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<transition name="trait" appear>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div :class="{ \'trait-inner\': true, \'selected\': isSelected([\'trait\', s, t]) }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@click.stop="selectCharacterPart([ \'trait\', s, t ])"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h2 class="trait-title">\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="trait-name"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tv-html="trait.name"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="trait-value">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span :class="{ \'c\': true, \'active\': trait.value === 4 }" >4</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span :class="{ \'c\': true, \'active\': trait.value === 6 }" >6</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span :class="{ \'c\': true, \'active\': trait.value === 8 }" >8</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span :class="{ \'c\': true, \'active\': trait.value === 10 }">0</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span :class="{ \'c\': true, \'active\': trait.value === 12 }">2</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass="trait-description"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tv-html="renderText(trait.description)"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t></div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ul class="trait-sfx" v-if="trait.sfx && trait.sfx.length">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li v-for="(sfx, s) in trait.sfx">\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="trait-sfx-name"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tv-html="sfx.name"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></span>:\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="trait-sfx-description"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tv-html="renderText(sfx.description)"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></span>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</transition>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<transition name="editor" appear>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<trait-editor\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:character="character"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:open="isSelected([\'trait\', s, t])"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tv-show="isSelected([\'trait\', s, t])"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:traitSetID="s"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:traitID="t"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:viewY="viewY"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@selectCharacterPart="selectCharacterPart"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@update="update"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t@removeTrait="removeTrait"\n\t\t\t\t\t\t\t\t\t\t\t\t\t></trait-editor>\n\t\t\t\t\t\t\t\t\t\t\t\t</transition>\n\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</template>\n\n\t\t\t\t\t\t\t\t\t\t\x3c!-- BUTTON: ADD TRAIT --\x3e\n\t\t\t\t\t\t\t\t\t\t<div class="preview-button-container">\n\t\t\t\t\t\t\t\t\t\t\t<div class="preview-button"\n\t\t\t\t\t\t\t\t\t\t\t\t@click.stop="addTrait( s, traitSetLocation )"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span><i class="fas fa-plus"></i> New Trait</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t</div> \x3c!-- .trait-column --\x3e\n\t\t\t\t\t\t\t\t</div> \x3c!-- .trait-columns --\x3e\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</template>\n\n\t\t\t\t\t\t\t\x3c!-- BUTTON: ADD TRAIT SET --\x3e\n\t\t\t\t\t\t\t<div class="preview-button-container">\n\t\t\t\t\t\t\t\t<div class="preview-button"\n\t\t\t\t\t\t\t\t\t@click.stop="addTraitSet( pageLocation )"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span><i class="fas fa-plus"></i> New Trait Set</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div> \x3c!-- .columns --\x3e\n\t\t\t\t</div> \x3c!-- .page-inner --\x3e\n\t\t\t</div> \x3c!-- .page --\x3e\n\t\t</div> \x3c!-- .pages --\x3e\n\t</section>',methods:{isSelected(t){return cortexFunctions.arraysMatch(this.selectedCharacterPart,t)},renderText:t=>t=(t=(t=t.replace(/d\d*(\d)/g,'<span class="c">$1</span>')).replace(/([^A-Za-z])PP([^A-Za-z])/gi,'$1<span class="pp">PP</span>$2')).replace("\n","<br>"),renderDieValue:t=>cortexFunctions.getDieDisplayValue(t),getAttributeStyle(t){let e;return e=1===this.attributes.length?.5:t/(this.attributes.length-1),`left: ${61*e+8+3.5}mm; top: ${10*Math.sin(e*Math.PI)+7-3}mm;`},selectCharacterPart(t){this.$emit("selectCharacterPart",t)},clearSelected(){this.$emit("selectCharacterPart",[])},addTraitSet(t){let e=this.character;e.traitSets.push({name:"New trait set",description:"Trait set description",style:"default",location:t??"left",traits:[{name:"New trait",value:6,description:"Trait description",location:"left",sfx:[]}]}),this.update(e);let a=e.traitSets.length-1;this.selectCharacterPart(["traitSet",a])},removeTraitSet(t){this.clearSelected();let e=this.character;e.traitSets.splice(t,1),this.update(e)},addTrait(t,e){let a=this.character;a.traitSets[t].traits.push({name:"New trait",value:6,description:"Trait description",location:e??"left",sfx:[]}),this.update(a);let i=a.traitSets[t].traits.length-1;this.selectCharacterPart(["trait",t,i])},removeTrait(t,e){this.clearSelected(),setTimeout((()=>{let a=this.character;a.traitSets[t].traits.splice(e,1),this.update(a)}),200)},update(t){this.$emit("update",t)}}},NameEditor={props:{character:Object,open:Boolean},data:()=>({}),computed:{name:{get(){return this.character.name},set(t){this.setCharacterProperty("name",t)}},description:{get(){return this.character.description},set(t){this.setCharacterProperty("description",t)}}},template:'<aside :class="{ \'editor\': true, \'editor-character\': true, \'open\': open, \'scrollable\': false }" @click.stop="">\n\n\t\t<div class="editor-arrow"></div>\n\n\t\t<div class="editor-controls">\n\t\t\t<button @click.stop="selectCharacterPart([])"><i class="fas fa-times"></i></button>\n\t\t</div>\n\n\t\t<div class="editor-inner">\n\t\t\t<div>\n\n\t\t\t\t<div class="editor-fields">\n\n\t\t\t\t\t<div class="editor-field">\n\t\t\t\t\t\t<label>Character Name</label>\n\t\t\t\t\t\t<input type="text" v-model="name" ref="inputName">\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class="editor-field">\n\t\t\t\t\t\t<label>Description</label>\n\t\t\t\t\t\t<textarea v-model="description"></textarea>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t</aside>',watch:{open(t,e){t&&!e&&this.focusFirstInput()}},methods:{selectCharacterPart(t){this.$emit("selectCharacterPart",t)},async focusFirstInput(){await Vue.nextTick(),this.$refs.inputName.focus()},setCharacterProperty(t,e){let a=this.character;a[t]=e,this.update(a)},update(t){this.$emit("update",t)},doNothing(){}}},TraitSetEditor={props:{character:Object,traitSetID:Number,open:Boolean,viewY:Number},data:()=>({scrollPosition:"none",anchorPosition:"top",styleOptions:[{id:"default",label:"Default"},{id:"two-columns-compact",label:"Two Columns (Compact)"},{id:"two-columns-detailed",label:"Two Columns (Detailed)"},{id:"distinctions",label:"Distinctions"},{id:"assets",label:"Assets"},{id:"resources",label:"Resources"},{id:"stress",label:"Stress"}]}),computed:{traitSet(){let t=this.traitSetID;return this.character.traitSets[t]},name:{get(){return this.traitSet.name},set(t){this.setTraitSetProperty("name",t)}},description:{get(){return this.traitSet.description},set(t){this.setTraitSetProperty("description",t)}},style:{get(){return this.traitSet.style},set(t){this.setTraitSetProperty("style",t)}},cssClass(){let t={editor:!0,open:this.open,scrollable:!1};return t["anchor-position-"+this.anchorPosition]=!0,t}},template:'<aside :class="cssClass" @click.stop="">\n\n\t\t<div class="editor-arrow"></div>\n\n\t\t<div class="editor-controls">\n\t\t\t<button @click.stop="selectCharacterPart([])"><i class="fas fa-times"></i></button>\n\t\t\t<button class="editor-delete" @click.stop="removeTraitSet"><i class="fas fa-trash"></i></button>\n\t\t</div>\n\n\t\t<div class="editor-inner">\n\t\t\t<div>\n\n\t\t\t\t<div class="editor-fields">\n\n\t\t\t\t\t<div class="editor-field">\n\t\t\t\t\t\t<label>Trait Set Name</label>\n\t\t\t\t\t\t<input type="text" v-model="name" ref="inputName">\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class="editor-field" v-if="traitSet.location !== \'attributes\'">\n\t\t\t\t\t\t<label>Style</label>\n\t\t\t\t\t\t<select v-model="style">\n\t\t\t\t\t\t\t<option v-for="option in styleOptions" :value="option.id" :selected="option.id === style">{{ option.label }}</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class="editor-field">\n\t\t\t\t\t\t<label>Description</label>\n\t\t\t\t\t\t<textarea v-model="description"></textarea>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\n\t</aside>',mounted(){this.checkAnchorPosition(),this.open&&this.focusFirstInput()},watch:{character(){this.checkAnchorPosition()},viewY(){this.checkAnchorPosition()},open(t,e){t&&!e&&this.focusFirstInput()}},methods:{selectCharacterPart(t){this.$emit("selectCharacterPart",t)},async focusFirstInput(){await Vue.nextTick(),this.$refs.inputName.focus()},setTraitSetProperty(t,e){let a=this.character,i=this.traitSetID;a.traitSets[i][t]=e,this.update(a)},removeTraitSet(){this.$emit("removeTraitSet",this.traitSetID)},update(t){this.$emit("update",t)},checkAnchorPosition(){let t=window.innerHeight||html.clientHeight,e=this.$el.parentElement.getBoundingClientRect(),a=e.top+e.height/2;this.anchorPosition=a<t/2?"top":"bottom"}}},TraitEditor={props:{character:Object,traitSetID:Number,traitID:Number,open:Boolean,viewY:Number},data:()=>({scrollPosition:"none",anchorPosition:"top"}),computed:{trait(){let t=this.traitSetID,e=this.traitID;return this.character.traitSets[t].traits[e]},name:{get(){return this.trait.name},set(t){this.setTraitProperty("name",t)}},value:{get(){return this.trait.value},set(t){this.setTraitProperty("value",t)}},description:{get(){return this.trait.description},set(t){this.setTraitProperty("description",t)}},scrollable(){return Boolean(this.trait.sfx.length>0)},cssClass(){let t={editor:!0,open:this.open,scrollable:this.scrollable};return t["anchor-position-"+this.anchorPosition]=!0,this.scrollable&&(t["scroll-position-"+this.scrollPosition]=!0),t}},template:'<aside :class="cssClass" @click.stop="">\n\n\t\t<div class="editor-arrow"></div>\n\n\t\t<div class="editor-controls">\n\t\t\t<button @click.stop="selectCharacterPart([])"><i class="fas fa-times"></i></button>\n\t\t\t<button class="editor-delete" @click.stop="removeTrait"><i class="fas fa-trash"></i></button>\n\t\t</div>\n\n\t\t<div class="editor-inner">\n\t\t\t<div @scroll="checkScrollPosition">\n\t\n\t\t\t\t<div class="editor-fields">\n\n\t\t\t\t\t<div class="editor-field">\n\t\t\t\t\t\t<label>Trait Name</label>\n\t\t\t\t\t\t<input type="text" v-model="name" ref="inputName">\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class="editor-field">\n\n\t\t\t\t\t\t<label>Trait Value</label>\n\n\t\t\t\t\t\t<ul class="editor-values">\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tv-for="value in [4,6,8,10,12]"\n\t\t\t\t\t\t\t\t:class="{ \'active\': value === trait.value }"\n\t\t\t\t\t\t\t\t@click.stop="toggleTraitValue( value )"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span class="c" v-html="getDieDisplayValue(value)"></span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class="editor-field">\n\t\t\t\t\t\t<label>Description</label>\n\t\t\t\t\t\t<textarea v-model="description"></textarea>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t\x3c!-- SFX --\x3e\n\t\t\t\t\t<div class="editor-field">\n\n\t\t\t\t\t\t<label>SFX</label>\n\n\t\t\t\t\t\t<transition-group appear>\n\t\t\t\t\t\t\t<sfx-editor\n\t\t\t\t\t\t\t\tv-for="(effect, effectID) in trait.sfx"\n\t\t\t\t\t\t\t\t:key="traitSetID + \'-\' + traitID + \'-\' + effectID"\n\t\t\t\t\t\t\t\t:character="character"\n\t\t\t\t\t\t\t\t:traitSetID="traitSetID"\n\t\t\t\t\t\t\t\t:traitID="traitID"\n\t\t\t\t\t\t\t\t:effectID="effectID"\n\t\t\t\t\t\t\t\t@update="update"\n\t\t\t\t\t\t\t\t@removeEffect="removeEffect"\n\t\t\t\t\t\t\t></sfx-editor>\n\t\t\t\t\t\t</transition-group>\n\n\t\t\t\t\t\t<div class="editor-button-container">\n\t\t\t\t\t\t\t<button class="editor-button" @click.stop="addEffect"><i class="fas fa-plus"></i> New SFX</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\n\t</aside>',mounted(){this.checkAnchorPosition(),this.checkScrollPosition(),this.open&&this.focusFirstInput()},watch:{character(){this.checkAnchorPosition()},viewY(){this.checkAnchorPosition()},open(t,e){t&&!e&&this.focusFirstInput()}},methods:{selectCharacterPart(t){this.$emit("selectCharacterPart",t)},async focusFirstInput(){await Vue.nextTick(),this.$refs.inputName.focus()},setTraitProperty(t,e){let a=this.character,i=this.traitSetID,r=this.traitID;a.traitSets[i].traits[r][t]=e,this.update(a)},toggleTraitValue(t){t===this.trait.value&&(t=null),this.setTraitProperty("value",t)},removeTrait(){this.$emit("removeTrait",this.traitSetID,this.traitID)},addEffect(){let t=this.character,e=this.traitSetID,a=this.traitID;t.traitSets[e].traits[a].sfx.push({name:"New SFX",description:"SFX description"}),this.update(t)},removeEffect(t){let e=this.character,a=this.traitSetID,i=this.traitID,r=t;e.traitSets[a].traits[i].sfx.splice(r,1),this.update(e)},update(t){this.$emit("update",t)},checkAnchorPosition(){let t=window.innerHeight||html.clientHeight,e=this.$el.parentElement.getBoundingClientRect(),a=e.top+e.height/2;this.anchorPosition=a<t/2?"top":"bottom"},checkScrollPosition(){let t=this.$el.querySelector(".editor-inner > div"),e=t.scrollTop,a=t.scrollHeight-t.clientHeight;this.scrollPosition=a<=0?"none":0!==e?e>=a-1?"bottom":"middle":"top"},getDieDisplayValue:t=>cortexFunctions.getDieDisplayValue(t)}},SfxEditor={props:{character:Object,selected:Array,traitSetID:Number,traitID:Number,effectID:Number},data:()=>({}),computed:{effect(){let t=this.traitSetID,e=this.traitID,a=this.effectID;return this.character.traitSets[t].traits[e].sfx[a]},selector(){return["sfx",this.traitSetID,this.traitID,this.effectID]},name:{get(){return this.effect.name},set(t){this.setEffectProperty("name",t)}},description:{get(){return this.effect.description},set(t){this.setEffectProperty("description",t)}}},template:'<section class="editor-subgroup">\n\t\n\t\t<div class="editor-fields">\n\n\t\t\t<div class="editor-field">\n\t\t\t\t<label>SFX Name</label>\n\t\t\t\t<input type="text" v-model="name">\n\t\t\t</div>\n\n\t\t\t<div class="editor-field">\n\t\t\t\t<label>SFX Description</label>\n\t\t\t\t<textarea v-model="description"></textarea>\n\t\t\t</div>\n\n\t\t\t<div class="editor-button-container">\n\t\t\t\t<button class="editor-button editor-button-remove editor-button-tertiary" @click.prevent="removeEffect"><i class="fas fa-trash"></i> Remove SFX</button>\n\t\t\t</div>\n\n\t\t</div>\n\n\t</section>',methods:{setEffectProperty(t,e){let a=this.character,i=this.traitSetID,r=this.traitID,n=this.effectID;a.traitSets[i].traits[r].sfx[n][t]=e,this.update(a)},update(t){this.$emit("update",t)},removeEffect(){this.$emit("removeEffect",this.effectID)}}},PortraitEditor={props:{character:Object,open:Boolean},data:()=>({}),computed:{hasImage(){return Boolean(this.character.portrait.url.length)}},template:'<aside :class="{ \'editor\': true, \'editor-portrait\': true, \'open\': open, \'scrollable\': false, \'anchor-position-top\': true }" @click.stop="">\n\n\t\t<div class="editor-arrow"></div>\n\n\t\t<div class="editor-controls">\n\t\t\t<button @click.stop="selectCharacterPart([])"><i class="fas fa-times"></i></button>\n\t\t\t<button v-if="hasImage" class="editor-delete" @click.stop="setImageURL(\'\')"><i class="fas fa-trash"></i></button>\n\t\t</div>\n\n\t\t<div class="editor-inner">\n\t\t\t<div>\n\n\t\t\t\t<div class="editor-fields">\n\n\t\t\t\t\t<div class="editor-field">\n\n\t\t\t\t\t\t<label>Portrait</label>\n\n\t\t\t\t\t\t<img class="portrait-preview"\n\t\t\t\t\t\t\tv-if="hasImage"\n\t\t\t\t\t\t\t:src="character?.portrait?.url"\n\t\t\t\t\t\t\t@click.prevent="uploadStart"\n\t\t\t\t\t\t>\n\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass="editor-button"\n\t\t\t\t\t\t\t@click.prevent="uploadStart"\n\t\t\t\t\t\t><i class="fas fa-plus"></i> Upload {{ hasImage ? \'New\' : \'\' }} Image</button>\n\n\t\t\t\t\t\t<input class="portrait-input" type="file" ref="inputFile" @change="uploadProcess">\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\n\t</aside>',methods:{selectCharacterPart(t){this.$emit("selectCharacterPart",t)},uploadStart(){this.$refs.inputFile.click()},setImageURL(t){let e=this.character;e.portrait.url=t,this.update(e)},uploadProcess(t){if(!t.target.files||!t.target.files.length)return void this.setImageURL("");let e=t.target.files[0],a=new FileReader;a.readAsDataURL(e),a.onload=()=>{this.setImageURL(a.result)},a.onerror=t=>{console.log("Portrait error: ",t)}},update(t){this.$emit("update",t)}}};document.addEventListener("DOMContentLoaded",(()=>{app=Vue.createApp({name:"cortex-toolkit",data:()=>({character:null,selectedCharacterPart:null,viewY:null}),computed:{baseURL:()=>window.location.href},template:'<article id="cortex-toolkit">\n\t\t\n\t\t\t<header class="header">\n\t\t\t\t<div class="header-inner">\n\n\t\t\t\t</div>\n\t\t\t</header>\n\n\t\t\t<main class="main" ref="main" @scroll="setViewY">\n\t\t\t\n\t\t\t\t\x3c!-- CHARACTER SHEET --\x3e\n\t\t\t\t<transition appear>\n\t\t\t\t<character-sheet\n\t\t\t\t\tv-if="character"\n\t\t\t\t\t:character="character"\n\t\t\t\t\t:selectedCharacterPart="selectedCharacterPart"\n\t\t\t\t\t:viewY="viewY"\n\t\t\t\t\t@selectCharacterPart="selectCharacterPart"\n\t\t\t\t\t@update="updateCharacter"\n\t\t\t\t></character-sheet>\n\t\t\t\t</transition>\n\n\t\t\t</main>\n\n\t\t\t<aside class="about">\n\n\t\t\t\t<div class="about-logo">\n\t\t\t\t\t<a href="https://cortexrpg.com" target="_blank"><img src="images/cortex_community_logo_white.png"></a>\n\t\t\t\t</div>\n\n\t\t\t\t<div class="about-legal">\n\t\t\t\t\t<p>Cortex Prime is the award-winning world-building tabletop RPG system for forging unique, compelling game experiences from a set of modular rules mechanics available at CortexRPG.com </p>\n\t\t\t\t\t<p>Cortex is ©️ 2022 Fandom, Inc. Cortex, Cortex Prime, associated logos and trade dress are the trademarks of Fandom, Inc. Iconography used with permission.</p>\n\t\t\t\t\t<p>If you wish to publish or sell what you make using this tool, it is your responsibility to ensure you have the proper license or right for any resources used. No rights are granted through the use of this tool.</p>\n\t\t\t\t</div>\n\n\t\t\t</aside>\n\n\t\t</article>',mounted(){this.setViewY(),this.loadLocal()},methods:{setViewY(){this.viewY=this.$refs.main.scrollTop},setPageTitle(){pageTitle="Cortex Toolkit",this.character&&this.character.name.length&&(pageTitle=`${this.character.name} - ${pageTitle}`),document.title=pageTitle},async createDefaultCharacter(){let t=await fetch(this.baseURL+"data/cortex_character_default.json").then((t=>t.json()));return t.id=crypto.randomUUID(),t.modified=(new Date).getTime(),t},updateCharacter(t){this.character=t,this.saveLocal(),this.setPageTitle()},selectCharacterPart(t){cortexFunctions.arraysMatch(this.selectedCharacterPart,t)?this.selectedCharacterPart=[]:this.selectedCharacterPart=t},async loadLocal(){let t=null,e=localStorage.getItem("cortexToolkitData");if(e&&e.length){let a=JSON.parse(e);a&&(t=a.character)}t||(t=await this.createDefaultCharacter()),this.character=t,this.setPageTitle()},saveLocal(){this.character.modified=(new Date).getTime(),localStorage.setItem("cortexToolkitData",JSON.stringify({character:this.character}))}}}).component("character-sheet",CharacterSheet).component("name-editor",NameEditor).component("portrait-editor",PortraitEditor).component("trait-editor",TraitEditor).component("trait-set-editor",TraitSetEditor).component("sfx-editor",SfxEditor).mount("#cortex-toolkit")}));
