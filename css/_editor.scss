.editor {
	@extend %no-print;
	position: absolute;
	z-index: var(--z-editor);
	width: 20rem;
	background: hsla(0, 0%, 0%, 0.9);
	backdrop-filter: blur(.5rem);
	font-size: 1rem;
	color: white;
	padding: 1rem 3rem 1rem 1rem;
	border-radius: .5rem;
	box-shadow: 0 0 .25rem rgba(0, 0, 0, 0.5);
	&.editor-enter-active,
	&.editor-leave-active {
		transition: opacity .2s ease, transform .2s ease;
	}
	&.editor-enter-from,
	&.editor-leave-to {
		opacity: 0;
		transform: translate( var(--animation-offset-x), var(--animation-offset-y) ) scale(0.95);
		pointer-events: none;
	}

	&.editor-character {
		top: calc( 100% + 1rem );
		transform-origin: top left;
		--animation-offset-x: 0;
		--animation-offset-y: -1rem;
	}

	.column-left & {
		left: calc( 100% + 1rem );
		--animation-offset-x: -1rem;
		--animation-offset-y: 0;
		&.anchor-position-top {
			top: calc( -1 * var(--highlight-radius) );
			transform-origin: top left;
		}
		&.anchor-position-bottom {
			bottom: calc( -1 * var(--highlight-radius) );
			transform-origin: bottom left;
		}
	}

	.column-right & {
		right: calc( 100% + 1rem );
		--animation-offset-x: 1rem;
		--animation-offset-y: 0;
		&.anchor-position-top {
			top: calc( -1 * var(--highlight-radius) );
			transform-origin: top right;
		}
		&.anchor-position-bottom {
			bottom: calc( -1 * var(--highlight-radius) );
			transform-origin: bottom right;
		}
	}


	// Scroll indicators
	&.scrollable {
		height: 30rem;
	}

}

.editor-inner {
	overflow: hidden;
	.scrollable > & {
		&::before,
		&::after {
			position: absolute;
			display: block;
			left: 0;
			right: 0;
			z-index: var(--z-editor-scroll-indicator);
			color: white;
			text-align: center;
			padding: .25em .25em 1em;
			font: var(--fa-font-solid);
			line-height: 1;
			pointer-events: none;
			opacity: 1;
			transition: opacity .2s;
		}

		&::before {
			top: 0;
			background: linear-gradient( to bottom, black, color-mix(in srgb, black, transparent 100% ) );
			content: '\f106';
			border-top-left-radius: 1rem;
			border-top-right-radius: 1rem;
		}

		&::after {
			bottom: 0;
			background: linear-gradient( to top, black, color-mix(in srgb, black, transparent 100% ) );
			content: '\f107';
			border-bottom-left-radius: 1rem;
			border-bottom-right-radius: 1rem;
		}

		> div {
			position: absolute;
			top: 0;
			bottom: 0;
			left: 0;
			right: -2rem;
			padding: 1rem 5rem 1rem 1rem;
			overflow-x: hidden;
			overflow-y: scroll;
			scrollbar-width: none;
			::-webkit-scrollbar {
				display: none;
			}
		}
	}

	.scrollable.scroll-position-none &::before,
	.scrollable.scroll-position-top &::before {
		opacity: 0;
	}

	.scrollable.scroll-position-none &::after,
	.scrollable.scroll-position-bottom &::after {
		opacity: 0;
	}

}

.editor-arrow {
	position: absolute;
	width: 0; 
	height: 0; 
	.editor-character & {
		top: -.5em;
		left: .75em;
		border-left: .5em solid transparent;
		border-right: .5em solid transparent;
		border-bottom: .5em solid black;
	}
	.column-left & {
		left: -.5em;
		border-bottom: .5em solid transparent;
		border-top: .5em solid transparent;
		border-right: .5em solid black;
	}
	.column-right & {
		right: -.5em;
		border-bottom: .5em solid transparent;
		border-top: .5em solid transparent;
		border-left: .5em solid black;
	}
	.anchor-position-top & {
		top: .75em;
	}
	.anchor-position-bottom & {
		bottom: .75em;
	}
	
}

.editor-controls {
	position: absolute;
	z-index: var(--z-editor-controls);
	top: .5rem;
	bottom: .5rem;
	right: .5rem;
	display: flex;
	flex-direction: column;
	// justify-content: space-between;
	row-gap: 1rem;

	button {
		--button-color: currentColor;
		background: transparent;
		border: none;
		outline: none;
		font-size: 1.5rem;
		color: var(--button-color);
		cursor: pointer;
		&.editor-delete {
			--button-color: var(--color-primary);
			font-size: 1.2rem;
		}
	}

}

.editor-fields {
	display: flex;
	flex-direction: column;
	row-gap: 1rem;

	label {
		display: block;
		font-family: var(--font-secondary);
		margin-bottom: .25rem;
		// font-weight: bold;
		color: var(--color-primary);
		.editor-subgroup & {
			font-size: smaller;
			text-transform: uppercase;
			font-weight: normal;
		}
	}

	input[type="text"],
	textarea,
	select {
		width: 100%;
		border-radius: .25rem;
		border: none;
		outline: none;
		padding: .25rem;
		font-family: inherit;
		background: var(--color-input);
		color: white;
	}

	input[type="text"],
	textarea {
		font-size: .75rem;
	}

	textarea {
		min-height: 6rem;
	}

}

.editor-field {
	&:has(.editor-values):last-child {
		padding-bottom: 1rem; // Fixes the dice font characters being cut off at the bottom of the editor panel.
	}
}

.editor-values {
	list-style: none;
	padding: 0;
	margin: 0;
	display: flex;
	column-gap: .5rem;
	li {
		cursor: pointer;
		transition: color .2s;
		user-select: none;

		> .c {
			color: var(--color-inactive);
			position: relative;
			/*&::before {
				display: block;
				position: absolute;
				content: '';
				z-index: -1;
				width: .5em;
				height: .5em;
				background-color: white;
				border-radius: 50%;
				top: calc( 50% + .15em );
				left: 50%;
				transform: translate(-50%, -50%);
			}*/
		}
		&.active > .c {
			color: var(--color-primary);
		}
	}
}

.editor-button-container {
	@extend %button-container;
	--button-font-size: .66rem;
	.editor-field & {
		margin-top: .5em;
	}
	&:has(.editor-button-secondary) {
		--button-container-height: 1.5em;
	}
}

.editor-button {
	@extend %button;
	&.editor-button-remove {
		--button-color: var(--color-primary);
	}
}

.editor-button-secondary {
	@extend %button-secondary;
}

.editor-toggles {
	display: grid;
	width: 100%;
	grid-template-columns: 1.5rem 1fr;
	gap: .25rem;
	> div {
		display: flex;
		align-items: center;
	}
	> div:nth-child(odd) {
		justify-content: center;
	}
	> div:nth-child(even) {
		justify-content: flex-start;
	}
	label {
		display: block;
		margin: 0;
		font-family: inherit;
		font-size: .75rem;
		color: inherit;
		cursor: pointer;
		user-select: none;
	}
}

.editor-subgroups {
	display: flex;
	flex-direction: column;
	row-gap: .5rem;
}

.editor-subgroup {
	border: 2px solid var(--color-input);
	padding: 1em;
	border-radius: .25rem;
	&.v-enter-active,
	&.v-leave-active {
		transition: opacity .2s ease, transform .2s ease;
	}
	&.v-enter-from,
	&.v-leave-to {
		opacity: 0;
		transform: scale(0.8);
	}
}

.editor-portrait-alignment {
	display: grid;
	grid-template-columns: repeat(3, 1.5rem);
	gap: .25em;
	div {
		background-color: var(--color-interactive);
		width: 1.5rem;
		height: 1.5rem;
		opacity: .5;
		cursor: pointer;
		&.active {
			opacity: 1;
		}
	}
}
